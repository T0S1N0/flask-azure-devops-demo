name: Terraform Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Ensure resource group is imported
        run: |
          cd terraform
          # Only import if the resource address is not already in state
          if ! terraform state list | grep -q "^azurerm_resource_group.rg$"; then
            echo "Importing existing Azure resource group into Terraform state..."
            terraform import azurerm_resource_group.rg /subscriptions/${{ env.ARM_SUBSCRIPTION_ID }}/resourceGroups/flask-terraform-rg
          else
            echo "Resource group already in state; skipping import."
          fi

      - name: Terraform Plan
        run: terraform -chdir=terraform plan

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve